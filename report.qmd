---
title:        "Freedom and Institutions in Latin America and the Caribbean"
subtitle:     "_Different perspectives torwards different realities_"
author:       "_Carlos A. Toru√±o Paniagua_"
server:       shiny
bibliography: references.bib
format:       
  html:
    toc:       true
    toc-depth: 2
title-block-banner: "#264653"
title-block-banner-color: "white"
---

```{r}
#| context: setup
#| include: false

source("R/settings.R")

```

```{r}
#| context: data 
#| include: false

discrimination.ls <- list(
  "Overview"      = read_csv("Data/discrimination1.csv"),
  "Disaggregated" = read_csv("Data/discrimination2.csv") 
)

actors.ls <- list(
  "Overview"      = read_csv("Data/actors1.csv"),
  "Disaggregated" = read_csv("Data/actors2.csv") 
)

perceptions.ls <- list(
  "Overview"      = read_csv("Data/perceptions1.csv"),
  "Disaggregated" = read_csv("Data/perceptions2.csv") 
)

```

Latin America and the Caribbean is known for being the most unequal region in the world. As portrayed by [this report](https://publications.iadb.org/en/the-inequality-crisis-latin-america-and-the-caribbean-at-the-crossroads) published by the Inter-American Development Bank, the region is characterized by a very high inequality in the income distribution and a fractured social contract. In the previous years, there has been a debate around how much does the high inequality in social and economic grounds that prevails in the region influence democratic and institutional aspects in the region [see @krishna_inequality_2008].

In this report, Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.

## Perceptions of Discrimination

Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur:

::: panel-tabset
## 2022 Overview

```{r}
selectInput(inputId  = "inputP1a", 
            label    = h5("Select a variable:"), 
            choices  = list("Income"      = "q18a", 
                            "Gender"      = "q18b",
                            "Age"         = "EXP_q17j",
                            "Ethnicity"   = "q18c",
                            "Nationality" = "q18e",
                            "Skin Color"  = "EXP_q17g",
                            "Indigineous Origins" = "EXP_q17h", 
                            "Sexual Orientation"  = "q18f"), 
            selected = "EXP_q17g")
plotOutput("discrimination_fig1",
           height = "750px")
```

## Across Time Comparison

```{r}
#| panel: input
#| layout-ncol: 3

selectInput(inputId  = "inputP1b", 
            label    = h5("Country A:"), 
            choices  = unique(discrimination.ls[["Overview"]] %>% pull(country)), 
            selected = "LAC avg")
selectInput(inputId  = "inputP1c", 
            label    = h5("Country B:"), 
            choices  = unique(discrimination.ls[["Overview"]] %>% pull(country)), 
            selected = "Nicaragua")
selectInput(inputId  = "inputP1d", 
            label    = h5("Select a variable:"), 
            choices  = list("Income"      = "q18a", 
                            "Gender"      = "q18b",
                            "Ethnicity"   = "q18c",
                            "Nationality" = "q18e",
                            "Sexual Orientation"  = "q18f"), 
            selected = "q18b")
```

```{r}
plotOutput("discrimination_fig2",
           height = "550px")

```
:::

Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.

```{r}
selectInput(inputId  = "inputP2a", 
            label    = h5("Select a variable:"), 
            choices  = list("Income"      = "inancia", 
                            "Gender"      = "ale",
                            "Skin Color"  = "kin"), 
            selected = "kin")
plotlyOutput("discrimination_fig3",
           height = "750px")
```

```{r}
#| context: server

## ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
##
#                SERVER - DISCRIMINATION                                                                 ----
##
## ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

## Figure 1
output$discrimination_fig1 <- renderPlot({
  
  if (input$inputP1a == "EXP_q17g") {
    charac = "person with dark skin."
  }
  if (input$inputP1a == "q18a") {
    charac = "person with low incomes."
  }
  if (input$inputP1a == "q18b") {
    charac = "woman."
  }
  if (input$inputP1a == "EXP_q17j") {
    charac = "young person."
  }
  if (input$inputP1a == "q18c") {
    charac = "person of a different ethnicity."
  }
  if (input$inputP1a == "q18e") {
    charac = "foregeiner or immigrant."
  }
  if (input$inputP1a == "EXP_q17h") {
    charac = "a person with indigineous origins."
  }
  if (input$inputP1a == "q18f") {
    charac = "a member of the LGBT community."
  }
  
  discrimination.ls[["Overview"]] %>%
    filter(year == 2022) %>%
    select(country, all_of(input$inputP1a)) %>%
    rename(target  = 2) %>%
    mutate(color = if_else(country == "LAC avg",
                           "Regional",
                           "Country")) %>%
    ggplot(aes(x    = reorder(country, target),
               y    = target,
               fill = color)) +
    geom_bar(stat   = "identity",
             show.legend = F) +
    labs(title    = "Perceptions of Police Bias in Latin America and the Caribbean",
         subtitle = paste("Percentage of people who believe that the local police would be negatively biased",
                          "\ntowards a", charac),
         y        = "% of Respondents",
         caption  = "**Source**: General Population Poll 2021-2022") +
    scale_fill_manual(values = c("Regional" = "#3B341F",
                                 "Country"  = "#A5CBC3")) +
    scale_y_continuous(limits = c(0,100),
                       breaks = seq(0, 100, 20)) +
    coord_flip() +
    WJP_theme() +
    theme(panel.grid.major.y = element_blank(),
          axis.title.y       = element_blank())
})

## Figure 2
output$discrimination_fig2 <- renderPlot({

  if (input$inputP1d == "q18a") {
    charac = "person with low incomes."
  }
  if (input$inputP1d == "q18b") {
    charac = "woman."
  }
  if (input$inputP1d == "q18c") {
    charac = "person of a different ethnicity."
  }
  if (input$inputP1d == "q18e") {
    charac = "foregeiner or immigrant."
  }
  if (input$inputP1d == "q18f") {
    charac = "a member of the LGBT community."
  }
  
  discrimination.ls[["Overview"]] %>%
    filter(country %in% c(input$inputP1b, input$inputP1c)) %>%
    select(country, year, all_of(input$inputP1d)) %>%
    rename(target  = 3) %>%
    mutate(color = if_else(country == input$inputP1b,
                           "Country A",
                           "Country B")) %>%
    ggplot(aes(x     = year,
               y     = target,
               color = country)) +
    geom_point(size  = 2.25) +
    geom_line(size   = 1.25) +
    labs(title    = "Perceptions of Police Bias in Latin America and the Caribbean",
         subtitle = paste("Percentage of people who believe that the local police would be negatively biased",
                          "\ntowards a", charac),
         y        = "% of Respondents",
         caption  = paste0("**Source**: General Population Poll 2021-2022<br>",
                           "**Note**: Time series are not available for perceptions based on skin color, age and indigineous origins.")) +
    scale_color_manual(values = c( "#264653", "#F4A261")) +
    scale_y_continuous(limits = c(0,100),
                       breaks = seq(0, 100, 20)) +
    scale_x_continuous(limits = c(2012, 2022),
                       breaks = seq(2012, 2022, 2),
                       labels = as.character(seq(2012, 2022, 2))) +
    WJP_theme() +
    theme(panel.grid.major.x = element_blank(),
          axis.title.x       = element_blank(),
          legend.position    = "top",
          legend.key         = element_rect(fill = "white"))
})

## Figure 3
output$discrimination_fig3 <- renderPlotly({
  
  if (input$inputP2a == "inancia") {
    charac = "person with low incomes."
  }
  if (input$inputP2a == "ale") {
    charac = "woman."
  }
  if (input$inputP2a == "kin") {
    charac = "person of dark skin."
  }
  
  ggplotly(
    discrimination.ls[["Disaggregated"]] %>%
      filter(str_detect(category, 
                        input$inputP2a)) %>%
      ggplot(aes(color = category,
                 x     = reorder(country, mean),
                 y     = mean,
                 text  = paste0("Percentage: ", 
                                format(round(mean, 0), 
                                       nsmall = 0), 
                                "%"))) +
      geom_point(size = 2) +
      geom_segment(aes(x    = country,
                       xend = country,
                       y    = lower,
                       yend = upper),
                   alpha    = 0.7,
                   show.legend = F) +
      labs(y        = "% of Respondents",
           caption  = paste0("**Source**: General Population Poll 2021-2022<br>",
                             "**Note**: Disaggregations are only possible between genders, income and skin color")) +
      scale_color_manual(values = c("#70161E",
                                    "#596F62")) +
      coord_flip() +
      WJP_theme() +
      theme(axis.title.y    = element_blank(),
            axis.title.x    = element_text(size  = 9),
            axis.text.x     = element_text(size  = 8),
            axis.text.y     = element_text(size  = 8,
                                           hjust = 0),
            plot.title      = element_text(size  = 13),
            legend.text     = element_text(size  = 8), 
            legend.key      = element_rect(fill  = "white"),
            legend.position = "bottom",
            legend.title    = element_blank()),
    tooltip = c("text")
  ) %>%
    layout(title  = list(text  = paste0("Difference in Perceptions between Sociodemographic Groups<br>",
                                        "<sup style='font-family:Lato;font-style:italic'>", 
                                        "Percentage of people who believe the police would be neg. biased ",
                                        "towards a ", charac, 
                                        "</sup>"),
                         font   = list(family = "Lato",
                                       size   = 17),
                         x      = 0),
           legend = list(title  = "",
                         x      = 0.3,
                         orientation = "h"),
           xaxis = list(fixedrange = T), 
           yaxis = list(fixedrange = T)) %>%
  config(displayModeBar = F)
})

```

## Criminal Justice Actors

Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.

Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.

::: panel-tabset

## Trust
```{r}
selectInput(inputId  = "inputP3a", 
            label    = h5("Select an actor:"), 
            choices  = list("Police"                   = "q1d", 
                            "Prosecutors"              = "q1e",
                            "Public Defense Attorneys" = "q1f",
                            "Judges and Magistrates"   = "q1g"), 
            selected = "q1d")

checkboxInput("inputP3b", 
              label = "Show previous waves", 
              value = F)

plotlyOutput("actors_fig1",
           height = "550px")
```

## Perceptions of Corruption
```{r}
selectInput(inputId  = "inputP3c", 
            label    = h5("Select an actor:"), 
            choices  = list("Police"                   = "q2d", 
                            "Prosecutors"              = "q2e",
                            "Public Defense Attorneys" = "q2f",
                            "Judges and Magistrates"   = "q2g"), 
            selected = "q2d")

checkboxInput("inputP3d", 
              label = "Show previous waves", 
              value = F)

plotlyOutput("actors_fig2",
           height = "550px")
```
:::

Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.

```{r}
#| panel: input
#| layout-ncol: 2
selectInput(inputId  = "inputP4a", 
            label    = h5("Select a country:"), 
            choices  = unique(actors.ls[["Disaggregated"]] %>% pull(country)), 
            selected = "Barbados")
selectInput(inputId  = "inputP4b", 
            label    = h5("Disaggregate results by:"), 
            choices  = list("Income"      = "inancia", 
                            "Gender"      = "ale",
                            "Skin Color"  = "kin"), 
            selected = "kin")
```

```{r}
plotlyOutput("actors_fig3",
           height = "550px")
```


```{r}
#| context: server

## ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
##
#                SERVER - CRIMINAL JUSTICE ACTORS                                                        ----
##
## ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

output$actors_fig1 <- renderPlotly({
  
  if (input$inputP3b == T) {
    yrs <- c("2017-2019", "2021-2022")
  } else {
    yrs <- c("2021-2022")
  }
  
  if (input$inputP3a == "q1d") {
    charac <- "police officers"
  }
  if (input$inputP3a == "q1e") {
    charac <- "public prosecutors"
  }
  if (input$inputP3a == "q1f") {
    charac <- "public defense attorneys"
  }
  if (input$inputP3a == "q1g") {
    charac <- "judges and magistrates"
  }
  
  data2plot <- actors.ls[["Overview"]] %>%
    mutate(
      secyear = year, 
      year = case_when(
        year >= 2021 & year <= 2022 ~ "2021-2022",
        year >= 2017 & year <= 2019 ~ "2017-2019",
      )
    ) %>%
    filter(year %in% yrs) %>%
    select(country, year, all_of(input$inputP3a), secyear) %>%
    rename(value2plot = 3) %>%
    group_by(country) %>%
    mutate(maxval  = if_else(year == "2021-2022", 1, NA_real_),
           maxval  = value2plot*maxval,
           maxval  = max(maxval, na.rm = T))
  
  plot <- ggplot(data = data2plot,
                 aes(x     = reorder(country, maxval),
                     y     = value2plot,
                     color = year,
                     text  = paste0(country, ": ", secyear, "<br>",
                                    "Percentage: ", 
                                    format(round(value2plot, 0), 
                                           nsmall = 0), 
                                    "%")))
  
  if (input$inputP3b == T) {
    plot <- plot +
      geom_segment(aes(xend = reorder(country, maxval),
                       y    = value2plot,
                       yend = maxval),
                   color    = "#F4A261",
                   alpha    = 0.75,
                   show.legend = F)
  }
  
  plot <- plot +
    geom_point(size = 2) +
    labs(y = "% of Respondents") +
    scale_color_manual(values = c("2021-2022" = "#264653", 
                                  "2017-2019" = "#F4A261")) +
    scale_y_continuous(limits = c(0,100),
                       breaks = seq(0, 100, 20)) +
    coord_flip() +
    WJP_theme() +
    theme(axis.title.y       = element_blank(),
          axis.title.x       = element_text(size  = 9),
          axis.text.x        = element_text(size  = 8),
          axis.text.y        = element_text(size  = 8,
                                            hjust = 0),
          panel.grid.major.y = element_blank(),
          plot.title         = element_text(size  = 13),
          legend.text        = element_text(size  = 8), 
          legend.key         = element_rect(fill  = "white"),
          legend.position    = "bottom",
          legend.title       = element_blank())
  
  ggplotly(plot, 
           tooltip = c("text")
  ) %>%
    layout(
      title  = list(text  = paste0("Trust in ", charac, " in Latin America and the Caribbean<br>",
                                   "<sup style='font-family:Lato;font-style:italic'>", 
                                   "Percentage of respondents who affirmed to have a lot or some trust in ", charac, 
                                   ".</sup>"),
                    font   = list(family = "Lato",
                                  size   = 17),
                    x      = 0),
      legend = list(title  = "",
                    x      = 0.3,
                    orientation = "h"),
      xaxis  = list(fixedrange = T), 
      yaxis  = list(fixedrange = T),
      margin = list(t   = 50,
                    r   = 50,
                    b   = 20, 
                    l   = 50,
                    pad = 0)
    ) %>%
  config(displayModeBar = F)
})

output$actors_fig2 <- renderPlotly({
  
  if (input$inputP3d == T) {
    yrs <- c("2017-2019", "2021-2022")
  } else {
    yrs <- c("2021-2022")
  }
  
  if (input$inputP3c == "q2d") {
    charac <- "police officers"
  }
  if (input$inputP3c == "q2e") {
    charac <- "public prosecutors"
  }
  if (input$inputP3c == "q2f") {
    charac <- "public defense attorneys"
  }
  if (input$inputP3c == "q2g") {
    charac <- "judges and magistrates"
  }
  
  data2plot <- actors.ls[["Overview"]] %>%
    mutate(
      secyear = year, 
      year = case_when(
        year >= 2021 & year <= 2022 ~ "2021-2022",
        year >= 2017 & year <= 2019 ~ "2017-2019",
      )
    ) %>%
    filter(year %in% yrs) %>%
    select(country, year, all_of(input$inputP3c), secyear) %>%
    rename(value2plot = 3) %>%
    group_by(country) %>%
    mutate(maxval  = if_else(year == "2021-2022", 1, NA_real_),
           maxval  = value2plot*maxval,
           maxval  = max(maxval, na.rm = T))
  
  plot <- ggplot(data = data2plot,
                 aes(x     = reorder(country, maxval),
                     y     = value2plot,
                     color = year,
                     text  = paste0(country, ": ", secyear, "<br>",
                                    "Percentage: ", 
                                    format(round(value2plot, 0), 
                                           nsmall = 0), 
                                    "%")))
  
  if (input$inputP3d == T) {
    plot <- plot +
      geom_segment(aes(xend = reorder(country, maxval),
                       y    = value2plot,
                       yend = maxval),
                   color    = "#F4A261",
                   alpha    = 0.75,
                   show.legend = F)
  }
  
  plot <- plot +
    geom_point(size = 2) +
    labs(y = "% of Respondents") +
    scale_color_manual(values = c("2021-2022" = "#264653", 
                                  "2017-2019" = "#F4A261")) +
    scale_y_continuous(limits = c(0,100),
                       breaks = seq(0, 100, 20)) +
    coord_flip() +
    WJP_theme() +
    theme(axis.title.y       = element_blank(),
          axis.title.x       = element_text(size  = 9),
          axis.text.x        = element_text(size  = 8),
          axis.text.y        = element_text(size  = 8,
                                            hjust = 0),
          panel.grid.major.y = element_blank(),
          plot.title         = element_text(size  = 13),
          legend.text        = element_text(size  = 8), 
          legend.key         = element_rect(fill  = "white"),
          legend.position    = "bottom",
          legend.title       = element_blank())
  
  ggplotly(plot, 
           tooltip = c("text")
  ) %>%
    layout(
      title  = list(text  = paste0("Corruption perceptions of", charac, " in Latin America and the Caribbean<br>",
                                   "<sup style='font-family:Lato;font-style:italic'>", 
                                   "Percentage of respondents who believe that all or most ", charac, 
                                   " are involved in corrupt practices.</sup>"),
                    font   = list(family = "Lato",
                                  size   = 17),
                    x      = 0),
      legend = list(title  = "",
                    x      = 0.3,
                    orientation = "h"),
      xaxis  = list(fixedrange = T), 
      yaxis  = list(fixedrange = T),
      margin = list(t   = 50,
                    r   = 50,
                    b   = 20, 
                    l   = 50,
                    pad = 0)
    ) %>%
  config(displayModeBar = F)
})

output$actors_fig3 <- renderPlotly({
  
  data2plot <- actors.ls[["Disaggregated"]] %>%
    filter(country == input$inputP4a & str_detect(category, input$inputP4b))
  
  vals <- data2plot %>%
    select(starts_with("mean_")) %>%
    rename(`Trust:<br>Police`                        = mean_q1d, 
           `Trust:<br>Prosecutors`                   = mean_q1e,
           `Trust:<br>Public Defense Attorneys`      = mean_q1f,
           `Trust:<br>Judges & Magistrates`          = mean_q1g,
           `Corruption:<br>Police`                   = mean_q2d,
           `Corruption:<br>Prosecutors`              = mean_q2e,
           `Corruption:<br>Public Defense Attorneys` = mean_q2f,
           `Corruption:<br>Judges & Magistrates`     = mean_q2g)
  
  plot_ly(
    type = 'scatterpolar',
    fill = 'toself'
  ) %>%
    add_trace(
      r         = as.numeric(vals[1,]),
      theta     = names(vals),
      name      = (data2plot$category)[1],
      fillcolor = "#70161E",
      line      = list(color   = "#70161E"),
      marker    = list(color   = "#70161E",
                       opacity = 1),
      opacity = 0.5
    ) %>%
    add_trace(
      r     = as.numeric(vals[2,]),
      theta = names(vals),
      name  = (data2plot$category)[2],
      fillcolor = "#596F62",
      line      = list(color   = "#596F62"),
      marker    = list(color   = "#596F62",
                       opacity = 1),
      opacity = 0.5
    )  %>%
    layout(
      title  = list(text  = paste0("Trust and Corruption in Selected Institutions across LAC<br>",
                                   "<sup style='font-family:Lato;font-style:italic'>", 
                                   "Percentages disaggregated by sociodemographic group</sup>"),
                    font   = list(family = "Lato",
                                  size   = 16),
                    x      = 0),
      polar = list(
        radialaxis = list(
          visible  = T,
          range    = c(0,100)
        ),
        margin = list(t   = 200,
                      r   = 40,
                      b   = 40, 
                      l   = 40,
                      pad = 40,
                      autoexpand = F) ,
        xaxis  = list(fixedrange = T), 
        yaxis  = list(fixedrange = T)
      )
    )
  
})
```

## Perceptions Criminal Justice System    

Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.

Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.

::: panel-tabset

## Year Comparisson

```{r}
selectInput(inputId  = "inputP5a", 
            label    = h5("Select a country:"), 
            choices  = unique(actors.ls[["Overview"]] %>% pull(country)), 
            selected = "Colombia")

plotOutput("perceptions_fig1",
           height = "550px")
```

## Perceptions of Corruption

```{r}
#| panel: input
#| layout-ncol: 2
selectInput(inputId  = "inputP5b", 
            label    = h5("Select a country:"), 
            choices  = unique(actors.ls[["Disaggregated"]] %>% pull(country)), 
            selected = "Barbados")
selectInput(inputId  = "inputP5c", 
            label    = h5("Disaggregate results by:"), 
            choices  = list("Income"      = "inancia", 
                            "Gender"      = "ale",
                            "Skin Color"  = "kin"), 
            selected = "kin")

```

```{r}
plotOutput("perceptions_fig2",
           height = "550px")
```

:::

```{r}
#| context: server

## ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
##
#                SERVER - Perceptions Criminal Justice System                                                        ----
##
## ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


output$perceptions_fig1 <- renderPlot({
  
  yrs <- perceptions.ls[["Overview"]] %>%
  filter(country %in% input$inputP5a) %>%
  slice_max(order_by = group, n = 2) %>%
  pull(group)
  
  data2plot <- perceptions.ls[["Overview"]] %>%
    filter(country %in% input$inputP5a)
  data2plot <- data2plot[,2:8]
  
  # Definig labels - Part I: Percentages
  vals <- data2plot %>% 
    filter(group == yrs[1]) %>%
    pivot_longer(!group,
                 values_to = "values",
                 names_to  = "vars") %>%
    pull(values)

  vals <- paste0(round(vals*100,0), "%")
  names(vals) <- names(data2plot %>% select(!group))
  
  # Defining color palette
  colors4plot <- c("#264653", "#F4A261")
  names(colors4plot) <- yrs
  
  applying_labels.fn <- function(text = text, color_code, value_vectors){
  case_when(
    text == 'q48e_G1' ~ paste("<span style='color:", color_code, ";font-size:6.326276mm;font-weight:bold'>",  
                           value_vectors["q48e_G1"],
                           "</span>",
                           "<br>",
                           "<span style='color:#524F4C;font-size:3.514598mm;font-weight:bold'>",
                           "The courts **guarantee** everyone<br> a fair trial",
                           "</span>"),
    text == 'q48f_G1' ~ paste("<span style='color:", color_code, ";font-size:6.326276mm;font-weight:bold'>",  
                              value_vectors["q48f_G1"],
                              "</span>",
                              "<br>",
                              "<span style='color:#524F4C;font-size:3.514598mm'>",
                              "The courts are more concerned <br> about *procedures* than they <br> are with providing justice",
                              "</span>"),
    text == 'q48g_G1' ~ paste("<span style='color:", color_code, ";font-size:6.326276mm;font-weight:bold'>",  
                              value_vectors["q48g_G1"],
                              "</span>",
                              "<br>",
                              "<span style='color:#524F4C;font-size:3.514598mm'>",
                              "The courts decides according <br>to the *interes* of those <br>innocence who have more money",
                              "</span>"),
    text == 'q48e_G2' ~ paste("<span style='color:", color_code, ";font-size:6.326276mm;font-weight:bold'>",  
                              value_vectors["q48e_G2"],
                              "</span>",
                              "<br>",
                              "<span style='color:#524F4C;font-size:3.514598mm'>",
                              "Police investigators **investigate crimes <br> in an independent manner**",
                              "</span>"),
    text == 'q48f_G2' ~ paste("<span style='color:", color_code, ";font-size:6.326276mm;font-weight:bold'>",  
                              value_vectors["q48f_G2"],
                              "</span>",
                              "<br>",
                              "<span style='color:#524F4C;font-size:3.514598mm'>",
                              "Prosecutors **prosecute crimes <br> in an independent manner**",
                              "</span>"),
    text == 'q48g_G2' ~ paste("<span style='color:", color_code, ";font-size:6.326276mm;font-weight:bold'>",  
                                    value_vectors["q48g_G2"],
                                    "</span>",
                                    "<br>",
                                    "<span style='color:#524F4C;font-size:3.514598mm'>",
                                    "Judges **decides cases <br> in an independent manner**",
                                    "</span>")
  )
  }
  
  base_figure <- ggradar2::ggradar2(
  data2plot,
  radarshape  = "sharp",
  fullscore   = rep(1, 6),
  polygonfill = F,
  background.circle.colour = "white",
  gridline.mid.colour      = "grey",
  gridline.min.linetype    = "solid",
  gridline.mid.linetype    = "solid",
  gridline.max.linetype    = "solid",
  grid.label.size = 3.514598,
  
  # The following part is IMPORTANT. We define the labels using a markdown syntax. However, given that
  # ggradar2 uses geom_text(), markdown language is not supported and all the italics or bold fonts. 
  # will not be reflected. Therefore, we set labels with color == "white" so they are not visible  
  # However, ggradar estimates the optimal X and Y coordinates of these labels and saves them as plot data.
  # We gonna use these coordinates to plot these labels again but using ggtext::geom_richtext which
  # supports markdown syntax in the labels.
  
  axis.labels.color = "white",
  axis.label.size  = 1,
  group.colours    = colors4plot,
  group.line.width = 0.75
)

# Transforming labels using an externally predefined function
base_figure$data <- base_figure$data %>%
  mutate(across(text,
                applying_labels.fn ,
                color_code    = colors4plot[1],
                value_vectors = vals))

# Adding additional aesthetics to radar chart using the "traditional" tools from ggplot2
radar <- base_figure +
  ggtext::geom_richtext(data  = base_figure$data,
                        # For the aesthetics, we bring the X and Y coordinates saved by ggradar2 with
                        # a minor adjustment depending on the final position of the label.
                        aes(x     = x*c(1.0, 1.2, 1.17, 1.12, 1.0, 1.1), 
                            y     = y*c(1.1, 1.2, 1.10, 1.12, 1.1, 1.1), 
                            label = text),
                        #family      = "Lato Full",
                        fontface    = "plain",
                        hjust       = 0.5, 
                        size        = 3.514598,
                        text.colour = "#524F4C", 
                        fill        = NA, 
                        label.color = NA) +
  scale_y_continuous(expand = expansion(mult = 0.065)) +
  theme(legend.position = "top");radar

})


output$perceptions_fig2 <- renderPlot({
  
  data2plot <- perceptions.ls[["Disaggregated"]] %>%
    filter(group %in% input$inputP5b) %>%
    filter(str_detect(category, input$inputP5c))
  
  yrs <- data2plot %>%
    pull(category) %>%
    unique()
  
  data2plot <- data2plot[,2:8] %>%
    rename(group = category)
  
  # Definig labels - Part I: Percentages
  
  vals <- data2plot %>% 
    filter(group == yrs[1]) %>%
    pivot_longer(!group,
               values_to = "values",
               names_to  = "vars") %>%
    pull(values)
  
  vals <- paste0(round(vals*100,0), "%")
  names(vals) <- names(data2plot %>% select(!group))

  # Defining color palette
  colors4plot <- c("#264653", "#F4A261")
  names(colors4plot) <- yrs
  
  applying_labels.fn <- function(text = text, color_code, value_vectors){
  case_when(
    text == 'q48e_G1' ~ paste("<span style='color:", color_code, ";font-size:6.326276mm;font-weight:bold'>",  
                           value_vectors["q48e_G1"],
                           "</span>",
                           "<br>",
                           "<span style='color:#524F4C;font-size:3.514598mm;font-weight:bold'>",
                           "The courts **guarantee** everyone<br> a fair trial",
                           "</span>"),
    text == 'q48f_G1' ~ paste("<span style='color:", color_code, ";font-size:6.326276mm;font-weight:bold'>",  
                              value_vectors["q48f_G1"],
                              "</span>",
                              "<br>",
                              "<span style='color:#524F4C;font-size:3.514598mm'>",
                              "The courts are more concerned <br> about *procedures* than they <br> are with providing justice",
                              "</span>"),
    text == 'q48g_G1' ~ paste("<span style='color:", color_code, ";font-size:6.326276mm;font-weight:bold'>",  
                              value_vectors["q48g_G1"],
                              "</span>",
                              "<br>",
                              "<span style='color:#524F4C;font-size:3.514598mm'>",
                              "The courts decides according <br>to the *interes* of those <br>innocence who have more money",
                              "</span>"),
    text == 'q48e_G2' ~ paste("<span style='color:", color_code, ";font-size:6.326276mm;font-weight:bold'>",  
                              value_vectors["q48e_G2"],
                              "</span>",
                              "<br>",
                              "<span style='color:#524F4C;font-size:3.514598mm'>",
                              "Police investigators **investigate crimes <br> in an independent manner**",
                              "</span>"),
    text == 'q48f_G2' ~ paste("<span style='color:", color_code, ";font-size:6.326276mm;font-weight:bold'>",  
                              value_vectors["q48f_G2"],
                              "</span>",
                              "<br>",
                              "<span style='color:#524F4C;font-size:3.514598mm'>",
                              "Prosecutors **prosecute crimes <br> in an independent manner**",
                              "</span>"),
    text == 'q48g_G2' ~ paste("<span style='color:", color_code, ";font-size:6.326276mm;font-weight:bold'>",  
                                    value_vectors["q48g_G2"],
                                    "</span>",
                                    "<br>",
                                    "<span style='color:#524F4C;font-size:3.514598mm'>",
                                    "Judges **decides cases <br> in an independent manner**",
                                    "</span>")
  )
  }
  
  base_figure <- ggradar2::ggradar2(
  data2plot,
  radarshape  = "sharp",
  fullscore   = rep(1, 6),
  polygonfill = F,
  background.circle.colour = "white",
  gridline.mid.colour      = "grey",
  gridline.min.linetype    = "solid",
  gridline.mid.linetype    = "solid",
  gridline.max.linetype    = "solid",
  grid.label.size = 3.514598,
  
  # The following part is IMPORTANT. We define the labels using a markdown syntax. However, given that
  # ggradar2 uses geom_text(), markdown language is not supported and all the italics or bold fonts. 
  # will not be reflected. Therefore, we set labels with color == "white" so they are not visible  
  # However, ggradar estimates the optimal X and Y coordinates of these labels and saves them as plot data.
  # We gonna use these coordinates to plot these labels again but using ggtext::geom_richtext which
  # supports markdown syntax in the labels.
  
  axis.labels.color = "white",
  axis.label.size  = 1,
  group.colours    = colors4plot,
  group.line.width = 0.75
)

# Transforming labels using an externally predefined function
base_figure$data <- base_figure$data %>%
  mutate(across(text,
                applying_labels.fn ,
                color_code    = colors4plot[1],
                value_vectors = vals))

# Adding additional aesthetics to radar chart using the "traditional" tools from ggplot2
radar <- base_figure +
  ggtext::geom_richtext(data  = base_figure$data,
                        # For the aesthetics, we bring the X and Y coordinates saved by ggradar2 with
                        # a minor adjustment depending on the final position of the label.
                        aes(x     = x*c(1.0, 1.2, 1.17, 1.12, 1.0, 1.1), 
                            y     = y*c(1.1, 1.2, 1.10, 1.12, 1.1, 1.1), 
                            label = text),
                        #family      = "Lato Full",
                        fontface    = "plain",
                        hjust       = 0.5, 
                        size        = 3.514598,
                        text.colour = "#524F4C", 
                        fill        = NA, 
                        label.color = NA) +
  scale_y_continuous(expand = expansion(mult = 0.065)) +
  theme(legend.position = "top");radar
  
})
```